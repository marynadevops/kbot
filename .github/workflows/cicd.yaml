name: KBOT-CICD

on: push

jobs: 
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: run tests
        run: go test -json ./... > test.json

      - name: Annotate tests
        if: success() || failure()
        uses: guyarb/golang-test-annotations@v0.6.0
        with:
          test-results: test.json

      - name: Run test
        run: make test-report

      - name: Test Report
        # uses: dorny/test-reporter@v1 # default
        uses: moudrick/test-reporter@stacktrace-split-safe ## works, some blind fixes there
        if: success() || failure()       # run this step even if previous step failed
        with:
          name: go-junit-report          # Name of the check run which will be created
          path: go-junit-*.xml           # Path to test results
          reporter: jest-junit           # Format of test results



      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build&Push
        env:
          APP: "kbot"
          REGISTRY: ${{ secrets.DOCKERHUB_USERNAME }}
        run: make image push

  cd:
    name: CD
    needs: ci
    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - run: echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - uses: mikefarah/yq@master
      with:
        cmd: yq -i '.image.tag=strenv(VERSION)' helm/values.yaml

    - run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git commit -am "update version $VERSION"
        git push
