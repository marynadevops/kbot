name: Secret reset workflow

on:
  workflow_dispatch:
    inputs:
      target-env:
        type: environment
        description: Select the environment
        required: true
        default: demo

jobs:
  secrets_reset:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event.inputs.target-env }}
      url: https://t.me/kbot_386221_bot

    steps:
    - name: Indicate Start
      run: echo "Resetting secrets for ${{ github.event.inputs.target-env }} environment"
    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - run: >
        echo "KUBE_CONFIG_EMPTY_BASE64=$(echo -n 'apiVersion: v1' | base64 -w 0)" >> $GITHUB_ENV
    - uses: tale/kubectl-action@v1
      with:
        base64-kube-config: ${{ env.KUBE_CONFIG_EMPTY_BASE64 }}

    - run: >
          kubectl
          create secret generic 
          kbot
          -n ${{ github.event.inputs.target-env }}
          --dry-run=client --validate=false -o yaml
          --from-literal=TELE_TOKEN=${{ secrets.TELE_TOKEN }}
          > secret.yaml

    - name: Sops Binary Installer
      uses: mdgreenwald/mozilla-sops-action@v1.4.1

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.SECRET_RESET_KMS_SOPS_JSON }}

    - run: >
        sops -e -gcp-kms 
        projects/k8s-k3s-386221/locations/global/keyRings/sops-flux/cryptoKeys/sops-key-flux
        --encrypted-regex '^(token)$'
        secret.yaml>secret-enc.yaml

    - run: rm secret.yaml
    
    - run: mkdir -p clusters/${{ github.event.inputs.target-env }}
    - run: mv secret-enc.yaml clusters/${{ github.event.inputs.target-env }}

    - run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add clusters/${{ github.event.inputs.target-env }}/secret-enc.yaml
        git commit -m "Secret reset: TELE_TOKEN; env: ${{ github.event.inputs.target-env }}"
        git push
