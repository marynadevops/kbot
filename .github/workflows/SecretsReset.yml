name: Secret reset workflow

on:
  workflow_dispatch:
    inputs:
      target-env:
        type: environment
        description: Select the environment
        required: true
        default: demo

jobs:
  secrets_reset:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event.inputs.target-env }}
      url: https://t.me/kbot_386221_bot

    steps:
    - name: Indicate Start
      run: echo "Resetting secrets for ${{ github.event.inputs.target-env }} environment"
    
    # - uses: actions/checkout@v1
    
    # - run: echo "KUBE_CONFIG_EMPTY=$(echo 'apiVersion: v1' | base64 -e)" >> $GITHUB_ENV
    - run: >
        echo "KUBE_CONFIG_EMPTY_BASE64=$(echo -n 'apiVersion: v1' | base64 -w 0)" >> $GITHUB_ENV
#     - uses: actions-hub/kubectl@master
# #       env:
# #         KUBE_CONFIG: 'apiVersion: v1'
    - uses: tale/kubectl-action@v1
      with:
        base64-kube-config: ${{ env.KUBE_CONFIG_EMPTY_BASE64 }}
        # base64-kube-config: ${{ secrets.KUBE_CONFIG }}
        # base64-kube-config: 'apiVersion: v1'
#         base64-kube-config: |
#           apiVersion: v1
#           kind: Config
#         base64-kube-config: |
#           apiVersion: v1
#           clusters: []
#           contexts: []
#           current-context: ""
#           kind: Config
#           preferences: {}
#           users: []
#       with:
#         args: |
    - run: cat /home/runner/.kube/config
    - run: cat ~/.kube/config
    - run: kubectl config view
    - run: >
          kubectl
          create secret generic 
          kbot
          -n ${{ github.event.inputs.target-env }}
          --dry-run=client --validate=false -o yaml
          --from-literal=TELE_TOKEN=${{ secrets.TELE_TOKEN }}
    
    - run: cat secret.yaml && rm secret.yaml
    
#     - run: |
#         git config user.name github-actions
#         git config user.email github-actions@github.com
#         git commit -am "update version $VERSION"
#         git push
    
#     - run: |
#        ;; kubectl -n ${{ github.event.inputs.target-env }} create secret kbot --dry-run -o yaml --from-literal=$TELE_TOKEN > secret.yaml
#        && cat secret.yaml
#        ;; rm secret.yaml
    
#     - run: |
#        ; curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
#        ; 
#        ; kubectl -n ${{ github.event.inputs.target-env }} create secret kbot --dry-run -o yaml --from-literal=$TELE_TOKEN > secret.yaml
#        ; cat secret.yaml
#        ; rm secret.yaml
#        ; wget https://github.com/mozilla/sops/releases/download/v3.7.3/sops-v3.7.3.linux.amd64
       
